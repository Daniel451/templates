### HITeC Project related ###
# See readme in folders
data/*
!data/README.md
logs/*
!logs/README.md

# VScode
# Usually exclude personal settings and only share necessary team settings (e.g. launch configuration)
# If you have mixed settings (team/personal) share a settings.json.default and exclude settings.json for example
.vscode/**/*   
# Re-include as needed
# !.vscode/settings.json  
# !.vscode/extensions.json
!.vscode/tasks.json 
!.vscode/launch.json

# PyTorch Lightning
# Exclude lightning logs. Specific results that should be included should be moved to an extra folder
lightning_logs/

# ML related binaries (e.g. model weights)
*.hdf5
*.h5
*.pb
*.pbtxt
*.tflite
*.pt
*.pth
*.bin
*.ckpt
*.meta
*.index
*.onnx
*.model
*.dmodel
*.cbm
saved_models/

# Python related binaries (also used by Scikit-learn etc.)
*.pkl
*.joblib
*.npy
*.npz

# Archives
*.7z        # 7-Zip compressed file
*.rar       # RAR archive
*.zip       # ZIP archive
*.gz        # Gzip compressed file
*.bz2       # Bzip2 compressed file
*.tar       # Tarball file (uncompressed)
*.tar.gz    # Gzipped tarball
*.tgz       # Shorthand for .tar.gz
*.tar.bz2   # Bzip2 compressed tarball
*.tbz2      # Shorthand for .tar.bz2
*.tar.xz    # XZ compressed tarball
*.txz       # Shorthand for .tar.xz
*.zipx      # Extended ZIP format
*.iso       # ISO disc image
*.dmg       # macOS disk image
*.jar       # Java Archive (may be required for Java projects)
*.war       # Web Application Archive (may be required for Java web applications)
*.ear       # Enterprise Application Archive (may be required for enterprise Java applications)
*.s7z       # Secure 7-Zip

# Images
# Raster Graphics
*.bmp       # Bitmap Image File
*.gif       # Graphic Interchange Format File
*.jpg       # JPEG Image File
*.jpeg      # JPEG Image File
*.png       # Portable Network Graphics File
*.tif       # Tagged Image File
*.tiff      # Tagged Image File Format
*.ico       # Icon File
*.webp      # WebP Image

# Vector Graphics
*.ai        # Adobe Illustrator File
*.eps       # Encapsulated PostScript File
*.svg       # Scalable Vector Graphics File

# Raw Image Formats
*.raw       # Raw Image Data File
*.cr2       # Canon Raw Image File
*.nef       # Nikon Electronic Format RAW Image
*.orf       # Olympus RAW File
*.dng       # Digital Negative Image File

# Others
*.psd       # Adobe Photoshop Document
*.xcf       # GIMP Image File
*.indd      # Adobe InDesign Document
*.heic      # High Efficiency Image File Format
*.heif      # High Efficiency Image File Format

# Videos
*.avi    # Audio Video Interleave File
*.flv    # Flash Video File
*.wmv    # Windows Media Video File
*.mov    # Apple QuickTime Movie File
*.mp4    # MPEG-4 Video File
*.mpg    # MPEG Video File
*.mpeg   # MPEG Movie
*.m4v    # iTunes Video File
*.mkv    # Matroska Video File
*.webm   # WebM Video File
*.vob    # DVD Video Object File
*.ogv    # Ogg Video File
*.ogg    # Ogg Media File
*.3gp    # 3GPP Multimedia File
*.3g2    # 3GPP2 Multimedia File
*.dvr-ms # Microsoft Digital Video Recording
*.m2ts   # MPEG-2 Transport Stream
*.mts    # AVCHD Video File
*.ts     # MPEG Transport Stream
*.mxf    # Material Exchange Format
*.rm     # RealMedia File
*.rmvb   # RealMedia Variable Bit Rate File
*.asf    # Advanced Systems Format File
*.amv    # Anime Music Video File
*.m4p    # iTunes Music Store Audio File
*.svi    # Samsung Video File
*.m4b    # MPEG-4 Audiobook File

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb_meta

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
